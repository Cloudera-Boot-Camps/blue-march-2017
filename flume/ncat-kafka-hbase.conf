
# Sources, channels, and sinks are defined per
# agent name, in this case 'tier1'.


tier1.sources  = source1
tier1.channels = channel1
tier1.sinks    = sink1

# Source : netcat
tier1.sources.source1.type     = netcat
tier1.sources.source1.bind     = 127.0.0.1
tier1.sources.source1.port     = 9999
tier1.sources.source1.channels = channel1

# channel : kafka
tier1.channels.channel1.type = org.apache.flume.channel.kafka.KafkaChannel
tier1.channels.channel1.capacity = 10000
tier1.channels.channel1.zookeeperConnect = ip-172-31-4-63.us-west-2.compute.internal:2181
tier1.channels.channel1.parseAsFlumeEvent = false
tier1.channels.channel1.kafka.topic = kudutest
tier1.channels.channel1.auto.offset.reset = earliest
tier1.channels.channel1.kafka.bootstrap.servers = ip-172-31-12-6.us-west-2.compute.internal:9092,ip-172-31-4-187.us-west-2.compute.internal:9092,ip-172-31-5-78.us-west-2.compute.internal:9020,ip-172-31-9-124.us-west-2.compute.internal:9092
tier1.channels.channel1.transactionCapacity = 1000
tier1.channels.channel1.kafka.consumer.max.partition.fetch.bytes=2097152

## hbase : sink
tier1.sinks.sink1.type = hbase
tier1.sinks.sink1.table = measurements
tier1.sinks.sink1.columnFamily = M
tier1.sinks.sink1.serializer = org.apache.flume.sink.hbase.RegexHbaseEventSerializer
tier1.sinks.sink1.serializer.regex=([\\w-]+),(\\d+),(\\d+),(\\d+),([\\d]+),([\\d\\.]+),([\\d\\.]+),([\\d\\.]+)
tier1.sinks.sink1.serializer.colNames=mearsurementID,detectorID,galaxyID,astrophysicistID,measurementTime,amplitude1,amplitude2,amplitude3
tier1.sinks.sink1.channel = channel1
